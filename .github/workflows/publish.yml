name: Build and publish Python package

on:
  workflow_call:
    inputs:
      test_extras:
        description: Any extras_requires modifier that should be used to install the package for testing
        required: false
        default: ''
        type: string
      test_command:
        description: The command to run to test the package (will be run in a temporary directory)
        required: false
        default: ''
        type: string
      pure_python_wheel:
        description: Whether to build a pure Python wheel - if not, separate wheels are built for each platform
        required: false
        default: false
        type: boolean
      platforms:
        description: List of target platforms
        required: false
        default: 'ubuntu-20.04 windows-2019 macos-10.15'
        type: string

jobs:

  generate_platform_matrix:
    name: Generate build_wheels matrix
    runs-on: ubuntu-latest
    if: ${{ !inputs.pure_python_wheel }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          FILTER='split(" ") as $platforms | {"os": $platforms}'
          echo "::set-output name=matrix::$( echo ${{ inputs.platforms }} | jq -R -c $FILTER )"

  build_wheels:
    name: Build platform-dependent wheels
    needs: [generate_platform_matrix]
    runs-on: ${{ matrix.os }}
    if: ${{ !inputs.pure_python_wheel }}
    strategy:
      matrix: ${{fromJSON(needs.generate_platform_matrix.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Run cibuildwheel
      uses: pypa/cibuildwheel@v2.3.1
      with:
        output-dir: dist
      env:
        CIBW_TEST_EXTRAS: ${{ inputs.test_extras }}
        CIBW_TEST_COMMAND: ${{ inputs.test_command }}

  build_sdist:
    name: Build source distribution
    if: ${{ !inputs.pure_python_wheel }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: build
        uses: OpenAstronomy/build-python-dist@main
        with:
          test_extras: ${{ inputs.test_extras }}
          test_command: ${{ inputs.test_command }}

  build_sdist_and_wheel:
    name: Build source and wheel distribution
    if: ${{ inputs.pure_python_wheel }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: build
        uses: OpenAstronomy/build-python-dist@main
        with:
          test_extras: ${{ inputs.test_extras }}
          test_command: ${{ inputs.test_command }}
