[tox]
envlist =
    pep8
    py3{8,9,10}
    py3{8,9,10}-inputs-{linux,macos,windows,conda,con_da}
    default_python
    py{,py}3{9,11}-python_version
    libraries
    cache-{setup,verify}

[testenv]
whitelist_externals =
    python
    conda
skip_install = true
commands =
    # Check the python version is as expected
    python -c "import sys; assert sys.version_info.major == 3"
    py38: python -c "import sys; assert sys.version_info.minor == 8"
    py39: python -c "import sys; assert sys.version_info.minor == 9"
    pypy39: python -c "import sys; assert sys.version_info.minor == 9"
    py310: python -c "import sys; assert sys.version_info.minor == 10"
    py311: python -c "import sys; assert sys.version_info.minor == 11"
    default_python: python -c "import sys; assert sys.version_info.minor == {posargs}"
    python_version: python -c "import platform; assert platform.python_implementation() == '{posargs}'"
    # Check the OS is as expected
    linux: python -c "import platform; assert platform.system() == 'Linux'"
    macos: python -c "import platform; assert platform.system() == 'Darwin'"
    windows: python -c "import platform; assert platform.system() == 'Windows'"
    # Check is conda is being used
    !conda-!con_da: python -c "import os, sys; assert not os.path.exists(os.path.join(sys.prefix, 'conda-meta', 'history'))"
    conda,con_da: python -c "import os, sys; assert {posargs} os.path.exists(os.path.join(sys.prefix, 'conda-meta', 'history'))"
    # Run a command that should only succeed is the library is installed
    libraries: {posargs}
    # Verify that caching is working
    cache-verify: python -c "f = open('a/b/c/test.txt', 'r'); f.close()"
    cache-setup: python -c "import os; os.makedirs('a/b/c/'); f = open('a/b/c/test.txt', 'w'); f.close()"

[testenv:pep8]
description = verify pep8
deps = flake8
commands = flake8 . --count

[testenv:py3{8,9,10}{,-conda}]
description = run pytest
skip_install = false
extras = test
conda_deps = pytest
commands =
    conda: python -c "import os, sys; assert os.path.exists(os.path.join(sys.prefix, 'conda-meta', 'history'))"
    conda: conda list
    pytest --pyargs test_package
